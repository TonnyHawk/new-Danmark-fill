*{box-sizing:border-box}a{text-decoration:none}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none}audio,canvas,video{display:inline-block;*display:inline;*zoom:1;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure,form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal;*margin-left:-7px}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline;*vertical-align:middle}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;*overflow:visible}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;*height:13px;*width:13px}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}.bg-gray{background:#c5c5c5}.bg-brown-gray{background:#c8b392}.relative{position:relative}.w-100{width:100%}.h-100{height:100%}html{font-family:gilroy}body{background:#0d0d0d}.ibg{background-position:50%;background-size:cover;background-repeat:no-repeat;position:relative}.ibg img{width:0;height:0;position:absolute;top:0;left:0;opacity:0;visibility:hidden}.flag{display:-ms-flexbox;display:flex}.slick-list{overflow:hidden}.slick-track{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.btn{display:block;color:#fff;width:-webkit-max-content;width:-moz-max-content;width:max-content}.btn_accent{padding:10px 45px;font-size:18px;background:#c60c30}.nav{z-index:3;position:fixed;width:100%;left:0;top:0;background:#000}.nav__wrap{display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;padding:10px 95px}.nav__logo{z-index:2}.nav__main{-ms-flex-positive:1;flex-grow:1;-ms-flex-pack:end;justify-content:flex-end;transition:.7s;z-index:1}.nav__main,.nav__menu{display:-ms-flexbox;display:flex}.nav__menu{-ms-flex-align:center;align-items:center}.nav__menu-item{margin-right:100px}.nav__menu-item_expand{display:block;margin:15px 0}.nav__menu-item_expand:hover{color:#fff}.nav__link{color:hsla(0,0%,100%,.6);transition:.3s}.nav__link:hover{color:#fff}.nav__dropdown{position:relative}.nav__dropdown:hover .nav__dropdown-content{opacity:1}.nav__dropdown-content{position:absolute;top:100%;opacity:0;width:-webkit-max-content;width:-moz-max-content;width:max-content;left:0}.nav__btn{display:none;z-index:2}.nav__aside{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.nav__aside-item{margin-right:100px}.nav__aside-item:last-child{margin-right:0}.nav__expand{position:relative}.nav__expand-btn{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;cursor:pointer;display:none;margin-right:100px}.nav__expand-btn.show{display:-ms-flexbox;display:flex}.nav__expand-btn span{height:4px;width:4px;background:gray;border-radius:100%;margin:2px}.nav__expand-menu{position:absolute;right:0;bottom:-110px;box-shadow:0 2px 5px #000;width:150px;padding:0 0 0 15px;display:none;z-index:2;background:#000}.nav__expand-menu.show{display:block}.nav_is-open .nav__main{top:100%}

/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */.hamburger{padding:0;display:inline-block;cursor:pointer;transition-property:opacity,filter;transition-duration:.15s;transition-timing-function:linear;font:inherit;color:inherit;text-transform:none;background-color:transparent;border:0;margin:0;overflow:visible}.hamburger.is-active:hover,.hamburger:hover{opacity:.7}.hamburger.is-active .hamburger-inner,.hamburger.is-active .hamburger-inner:after,.hamburger.is-active .hamburger-inner:before{background-color:#fff}.hamburger-box{width:40px;height:24px;display:inline-block;position:relative}.hamburger-inner{display:block;top:50%;margin-top:-2px}.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{width:40px;height:4px;background-color:#fff;border-radius:4px;position:absolute;transition-property:transform;transition-duration:.15s;transition-timing-function:ease}.hamburger-inner:after,.hamburger-inner:before{content:"";display:block}.hamburger-inner:before{top:-10px}.hamburger-inner:after{bottom:-10px}.hamburger--collapse .hamburger-inner{top:auto;bottom:0;transition-duration:.13s;transition-delay:.13s;transition-timing-function:cubic-bezier(.55,.055,.675,.19)}.hamburger--collapse .hamburger-inner:after{top:-20px;transition:top .2s cubic-bezier(.33333,.66667,.66667,1) .2s,opacity .1s linear}.hamburger--collapse .hamburger-inner:before{transition:top .12s cubic-bezier(.33333,.66667,.66667,1) .2s,transform .13s cubic-bezier(.55,.055,.675,.19)}.hamburger--collapse.is-active .hamburger-inner{transform:translate3d(0,-10px,0) rotate(-45deg);transition-delay:.22s;transition-timing-function:cubic-bezier(.215,.61,.355,1)}.hamburger--collapse.is-active .hamburger-inner:after{top:0;opacity:0;transition:top .2s cubic-bezier(.33333,0,.66667,.33333),opacity .1s linear .22s}.hamburger--collapse.is-active .hamburger-inner:before{top:0;transform:rotate(-90deg);transition:top .1s cubic-bezier(.33333,0,.66667,.33333) .16s,transform .13s cubic-bezier(.215,.61,.355,1) .25s}.head-instr{color:#fff;max-width:1900px;margin:50px auto 0;z-index:1}.head-instr__text-block{max-width:365px;margin-right:50px}.head-instr__title{font-size:64px;color:#fff;font-weight:700}.head-instr__tags{display:-ms-flexbox;display:flex;margin-top:30px}.head-instr__tag{font-family:sf;font-weight:100;font-size:13px;cursor:pointer;margin-right:20px}.head-instr__tag:last-child{margin-right:0}.head-instr__tab{display:none}.head-instr__descr{line-height:23px;font-family:sf;font-weight:100;font-size:12px;margin-top:35px}.head-instr__colors{display:-ms-flexbox;display:flex;margin-top:50px}.head-instr__color{height:25px;width:25px;border-radius:100%;margin-right:18px;cursor:pointer}.head-instr__color:last-child{margin-right:0}.head-instr__color:active{border:2px solid #fff}.head-instr__btn{margin-top:50px}.head-instr__shop-mob-icon{display:none}.head-instr__tag.is-active{border-bottom:1px solid #fff}.head-instr__tab.is-active{display:block}.head-instr__instrs.slick-slider{padding-right:20px}.head-instr .slick-dots{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;margin-bottom:10px}.head-instr .slick-dots li{font-size:0;width:20px;height:2.5px;background:#797878;border:none;margin:7px}.head-instr .slick-dots button{display:none}.head-instr .slick-dots li.slick-active{background:#fff}.slider{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.slider__imgs{-ms-flex:1 0 70%;flex:1 0 70%;min-width:0}.slider__img{max-width:100%}.slider__wrap{min-width:0}.slider__txts{-ms-flex:1 0 30%;flex:1 0 30%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-width:0}@media (max-width:1170px){.slider__imgs{-ms-flex-preferred-size:65%;flex-basis:65%}.slider__txts{-ms-flex-preferred-size:35%;flex-basis:35%}}@media (max-width:1100px){.nav__wrap{padding:10px 50px}}@media (max-width:920px){.nav__wrap{padding:10px 35px;-ms-flex-pack:justify;justify-content:space-between}.nav__main{position:absolute;width:100%;top:-100vh;left:0;background:#000000ed;padding:20px 0}.nav__main,.nav__menu{-ms-flex-direction:column;flex-direction:column}.nav__menu-item{margin:15px 0}.nav__btn{display:block}.nav__aside{-ms-flex-pack:center;justify-content:center;margin-right:0;margin-top:15px}.nav__aside-item,.nav__aside-item:last-child{margin:20px}}@media (max-width:850px){.head-instr__text-block{margin:0 auto}.head-instr__descr{margin-top:25px}.head-instr__shop-mob-icon{position:absolute;top:-20px;right:8%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background:#c60c30;height:50px;width:50px;border-radius:13px}.head-instr__instrs.slick-slider{padding-right:0}.slider__imgs,.slider__txts{-ms-flex-preferred-size:100%;flex-basis:100%}.slider__txts{position:relative;background:#0a0a0a;border-radius:37px 34px 0 0;padding:35px;-ms-flex-pack:center;justify-content:center}}@media (max-width:850px) and (max-width:400px){.head-instr__shop-mob-icon{right:7%}}@media (max-width:650px){.head-instr__title{font-size:35px}.head-instr__tags{margin-top:28px}.head-instr__tag{font-size:12px}.head-instr__descr{margin-top:20px;font-size:11px}.head-instr__btn,.head-instr__colors{display:none}}@media (max-width:400px){.nav__wrap{padding:10px 25px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
